<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-10T11:28:19 IST" name="Suite" finished-at="2022-11-10T11:29:15 IST" duration-ms="55514">
    <groups>
    </groups>
    <test started-at="2022-11-10T11:28:19 IST" name="Test" finished-at="2022-11-10T11:29:15 IST" duration-ms="55514">
      <class name="Testclasses.VerifyUserCanLogin">
        <test-method is-config="true" signature="beforeclass(java.lang.String)[pri:0, instance:Testclasses.VerifyUserCanLogin@55141def]" started-at="2022-11-10T11:28:19 IST" name="beforeclass" finished-at="2022-11-10T11:29:11 IST" duration-ms="51620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:Testclasses.VerifyUserCanLogin@55141def]" started-at="2022-11-10T11:29:11 IST" name="beforemethod" finished-at="2022-11-10T11:29:11 IST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="VerifyUserLogin()[pri:0, instance:Testclasses.VerifyUserCanLogin@55141def]" started-at="2022-11-10T11:29:11 IST" name="VerifyUserLogin" finished-at="2022-11-10T11:29:12 IST" duration-ms="1209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUserLogin -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:Testclasses.VerifyUserCanLogin@55141def]" started-at="2022-11-10T11:29:12 IST" name="aftermethod" finished-at="2022-11-10T11:29:12 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyUserLogin status=SUCCESS method=VerifyUserCanLogin.VerifyUserLogin()[pri:0, instance:Testclasses.VerifyUserCanLogin@55141def] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:Testclasses.VerifyUserCanLogin@55141def]" started-at="2022-11-10T11:29:12 IST" name="afterclass" finished-at="2022-11-10T11:29:13 IST" duration-ms="746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- Testclasses.VerifyUserCanLogin -->
      <class name="Testclasses.VerifyUserCanGetLowestPriceProduct">
        <test-method is-config="true" signature="beforeclass(java.lang.String)[pri:0, instance:Testclasses.VerifyUserCanGetLowestPriceProduct@7b98f307]" started-at="2022-11-10T11:29:13 IST" name="beforeclass" finished-at="2022-11-10T11:29:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:Testclasses.VerifyUserCanGetLowestPriceProduct@7b98f307]" started-at="2022-11-10T11:29:13 IST" name="beforemethod" finished-at="2022-11-10T11:29:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="VerifyUserGetLowestPriceProduct()[pri:0, instance:Testclasses.VerifyUserCanGetLowestPriceProduct@7b98f307]" started-at="2022-11-10T11:29:13 IST" name="VerifyUserGetLowestPriceProduct" finished-at="2022-11-10T11:29:14 IST" duration-ms="1176" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <input class="_3704LK" type="text" title="Search for products, brands and more" name="q" autocomplete="off" placeholder="Search for products, brands and more" value=""> is not clickable at point (482, 28). Other element would receive the click: <div class="_2hriZF _2rbIyg" tabindex="-1">...</div>
  (Session info: chrome=107.0.5304.107)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-OI02I69', ip: '192.168.43.126', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [91c944918270bbc60da1aa86bbb903ba, clickElement {id=13a5f607-e48e-4a38-9392-a3ab1b470238}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.107, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\Admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64732}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64732/devtoo..., se:cdpVersion: 107.0.5304.107, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (91c944918270bbc60da1aa86bbb903ba)] -> xpath: //input[@name='q']]
Session ID: 91c944918270bbc60da1aa86bbb903ba]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <input class="_3704LK" type="text" title="Search for products, brands and more" name="q" autocomplete="off" placeholder="Search for products, brands and more" value=""> is not clickable at point (482, 28). Other element would receive the click: <div class="_2hriZF _2rbIyg" tabindex="-1">...</div>
  (Session info: chrome=107.0.5304.107)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-OI02I69', ip: '192.168.43.126', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [91c944918270bbc60da1aa86bbb903ba, clickElement {id=13a5f607-e48e-4a38-9392-a3ab1b470238}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.107, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\Admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64732}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64732/devtoo..., se:cdpVersion: 107.0.5304.107, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (91c944918270bbc60da1aa86bbb903ba)] -> xpath: //input[@name='q']]
Session ID: 91c944918270bbc60da1aa86bbb903ba
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy19.click(Unknown Source)
at Pomclasses.HomePage.searchproduct(HomePage.java:59)
at Testclasses.VerifyUserCanGetLowestPriceProduct.VerifyUserGetLowestPriceProduct(VerifyUserCanGetLowestPriceProduct.java:56)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUserGetLowestPriceProduct -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:Testclasses.VerifyUserCanGetLowestPriceProduct@7b98f307]" started-at="2022-11-10T11:29:14 IST" name="aftermethod" finished-at="2022-11-10T11:29:15 IST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyUserGetLowestPriceProduct status=FAILURE method=VerifyUserCanGetLowestPriceProduct.VerifyUserGetLowestPriceProduct()[pri:0, instance:Testclasses.VerifyUserCanGetLowestPriceProduct@7b98f307] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:Testclasses.VerifyUserCanGetLowestPriceProduct@7b98f307]" started-at="2022-11-10T11:29:15 IST" name="afterclass" finished-at="2022-11-10T11:29:15 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- Testclasses.VerifyUserCanGetLowestPriceProduct -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
